-- MySQL Script generated by MySQL Workbench
-- 08 ماي, 2019 EET 11:40:50 م
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema Database_project
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Database_project
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Database_project` DEFAULT CHARACTER SET latin1 ;
USE `Database_project` ;

-- -----------------------------------------------------
-- Table `Database_project`.`PUBLISHER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Database_project`.`PUBLISHER` (
  `Id` INT(11) NOT NULL AUTO_INCREMENT,
  `publisher_name` VARCHAR(30) NOT NULL,
  `publisher_address` VARCHAR(30) NOT NULL,
  `publisher_telephone` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `Database_project`.`CATEGORY`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Database_project`.`CATEGORY` (
  `Id` INT(11) NOT NULL,
  `category_name` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `Database_project`.`BOOK`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Database_project`.`BOOK` (
  `ISBN` INT(11) NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(30) NOT NULL,
  `publisher_Id` INT(11) NOT NULL,
  `year` INT(11) NOT NULL,
  `price` FLOAT NOT NULL,
  `category_Id` INT(11) NOT NULL,
  `quantity` INT(11) NOT NULL,
  `min_quantity` INT(11) NOT NULL,
  PRIMARY KEY (`ISBN`),
  INDEX `publisher_Id` (`publisher_Id` ASC),
  INDEX `category_Id` (`category_Id` ASC),
  CONSTRAINT `BOOK_ibfk_1`
    FOREIGN KEY (`publisher_Id`)
    REFERENCES `Database_project`.`PUBLISHER` (`Id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `BOOK_ibfk_2`
    FOREIGN KEY (`category_Id`)
    REFERENCES `Database_project`.`CATEGORY` (`Id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `Database_project`.`AUTHOR`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Database_project`.`AUTHOR` (
  `ISBN_num` INT(11) NOT NULL,
  `author_name` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`ISBN_num`, `author_name`),
  CONSTRAINT `AUTHOR_ibfk_1`
    FOREIGN KEY (`ISBN_num`)
    REFERENCES `Database_project`.`BOOK` (`ISBN`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `Database_project`.`ORDERS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Database_project`.`ORDERS` (
  `Id` INT(11) NOT NULL AUTO_INCREMENT,
  `Isbn` INT(11) NOT NULL,
  `publisher_Id` INT(11) NOT NULL,
  `quantity` INT(11) NOT NULL,
  PRIMARY KEY (`Id`),
  INDEX `Isbn` (`Isbn` ASC),
  INDEX `publisher_Id` (`publisher_Id` ASC),
  CONSTRAINT `ORDERS_ibfk_1`
    FOREIGN KEY (`Isbn`)
    REFERENCES `Database_project`.`BOOK` (`ISBN`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `ORDERS_ibfk_2`
    FOREIGN KEY (`publisher_Id`)
    REFERENCES `Database_project`.`PUBLISHER` (`Id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `Database_project`.`managers_and_customers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Database_project`.`managers_and_customers` (
  `user_Id` INT(11) NOT NULL AUTO_INCREMENT,
  `user_name` VARCHAR(30) NOT NULL,
  `password` VARCHAR(30) NOT NULL,
  `admin` TINYINT(1) NULL DEFAULT '0',
  `first_name` VARCHAR(20) NOT NULL,
  `last_name` VARCHAR(20) NOT NULL,
  `e_mail` VARCHAR(45) NOT NULL,
  `phone_number` VARCHAR(20) NOT NULL,
  `shipping_address` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`user_Id`),
  UNIQUE INDEX `user_name_UNIQUE` (`user_name` ASC),
  UNIQUE INDEX `password_UNIQUE` (`password` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `Database_project`.`sales`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Database_project`.`sales` (
  `Id` INT(11) NOT NULL AUTO_INCREMENT,
  `Isbn` INT(11) NOT NULL,
  `Date` DATE NOT NULL,
  `user_Id` INT(11) NOT NULL,
  `price` FLOAT NOT NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB;

USE `Database_project`;

DELIMITER $$
USE `Database_project`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `Database_project`.`not_negative`
BEFORE UPDATE ON `Database_project`.`BOOK`
FOR EACH ROW
begin
       if (new.quantity > 0) or (new.quantity = 0) then
           set new.quantity = new.quantity;
	   elseif new.quantity<0 then
           set new.quantity = (select quantity from BOOK where BOOK.ISBN=new.ISBN);
       end if;
	end$$

USE `Database_project`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `Database_project`.`check_order`
AFTER UPDATE ON `Database_project`.`BOOK`
FOR EACH ROW
begin
	   if (new.quantity < new.min_quantity  and new.quantity>0) then
           insert into ORDERS(Isbn, publisher_Id, quantity) values(new.ISBN, new.publisher_Id, new.min_quantity*2 - new.quantity );
	   end if;
	end$$

USE `Database_project`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `Database_project`.`confirm_order`
BEFORE DELETE ON `Database_project`.`ORDERS`
FOR EACH ROW
begin
		update BOOK
		set quantity = quantity + old.quantity
		where BOOK.ISBN = old.Isbn;
   end$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
